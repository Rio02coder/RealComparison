name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      EMAIL_BACKEND: django.core.mail.backends.smtp.EmailBackend
      EMAIL_HOST: mail.privateemail.com
      EMAIL_USE_TLS: True
      EMAIL_PORT: 587
      EMAIL_HOST_USER: no-reply@realcomparison.co.uk
      EMAIL_HOST_PASSWORD: Realc2022
      DEFAULT_FILE_STORAGE: storages.backends.s3boto3.S3Boto3Storage
      AWS_ACCESS_KEY_ID: AKIAQPHDOOQ5WTWEM635
      AWS_SECRET_ACCESS_KEY: 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
      AWS_STORAGE_BUCKET_NAME: austin-properties
      AWS_S3_REGION_NAME: eu-west-2
      AWS_QUERYSTRING_AUTH: False
      SECRET_KEY: django-insecure-ljjjj3ka@qlk%sm13c$-043e84-r8er1lscy^h#3hi+qo_o83@
      
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.0]

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install pipenv
      run: |
        python -m pip install --upgrade pipenv wheel    
        
    - id: cache-pipenv
      uses: actions/cache@v1
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
    
    - name: Install Dependencies
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run: |
        cd backend
        pipenv install --deploy --dev
        
    - name: Run Tests
      run: |
        cd backend
        pipenv run python manage.py test